openapi: 3.1.0
info:
  title: Example API
  version: "0"
paths:
  /v1/hello:
    get:
      operationId: GetV1Hello
      summary: Hello - API
      description: Testing.
      parameters:
        - name: name
          in: query
          required: false
          description: GET /v1/hello Parameter
          schema:
            type: string
      responses:
        "200":
          description: GET /v1/hello Positive response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: success
                  data:
                    type: object
                    properties:
                      greetings:
                        type: string
                    required:
                      - greetings
                required:
                  - status
                  - data
        "400":
          description: GET /v1/hello Negative response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: error
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - status
                  - error
              examples:
                example1:
                  value:
                    status: error
                    error:
                      message: Sample error message
  /v1/auth/login:
    post:
      operationId: PostV1AuthLogin
      summary: Login
      description: Login with user name or password
      requestBody:
        description: POST /v1/auth/login Request body
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
              required:
                - email
                - password
      responses:
        "200":
          description: POST /v1/auth/login Positive response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: success
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                    required:
                      - token
                required:
                  - status
                  - data
        "400":
          description: POST /v1/auth/login Negative response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: error
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - status
                  - error
              examples:
                example1:
                  value:
                    status: error
                    error:
                      message: Sample error message
  /v1/auth/hello:
    get:
      operationId: GetV1AuthHello
      security:
        - APIKEY_1: []
      responses:
        "200":
          description: GET /v1/auth/hello Positive response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: success
                  data:
                    type: object
                    properties:
                      greetings:
                        type: string
                    required:
                      - greetings
                required:
                  - status
                  - data
        "400":
          description: GET /v1/auth/hello Negative response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: error
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - status
                  - error
              examples:
                example1:
                  value:
                    status: error
                    error:
                      message: Sample error message
  /v1/auth/refresh-token:
    post:
      operationId: PostV1AuthRefreshToken
      summary: Refresh the access token
      description: If already authenticated, this endpoint will send a new access token.
      requestBody:
        description: POST /v1/auth/refresh-token Request body
        content:
          application/json:
            schema:
              type: object
      security:
        - APIKEY_1: []
      responses:
        "200":
          description: POST /v1/auth/refresh-token Positive response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: success
                  data:
                    type: object
                    properties:
                      token:
                        type: string
                    required:
                      - token
                required:
                  - status
                  - data
        "400":
          description: POST /v1/auth/refresh-token Negative response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    const: error
                  error:
                    type: object
                    properties:
                      message:
                        type: string
                    required:
                      - message
                required:
                  - status
                  - error
              examples:
                example1:
                  value:
                    status: error
                    error:
                      message: Sample error message
components:
  schemas: {}
  responses: {}
  parameters: {}
  examples: {}
  requestBodies: {}
  headers: {}
  securitySchemes:
    APIKEY_1:
      type: apiKey
      in: header
      name: token
  links: {}
  callbacks: {}
tags: []
servers:
  - url: https://example.com
